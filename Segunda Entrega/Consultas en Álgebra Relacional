-- Script de Consultas en Álgebra Relacional de la Base de Datos de la microempresa Pionono Cakes
-- Desarrolladores:
-- Reinaldo Toledo Leguizamón
-- Santiago Hernández Chaparro

-- Proyecto de Bases de Datos 2021-1

use pionono_cakes;

-- 1) JOINS 

-- a) Información del contrato de cada empleado.

π empleado.nombre, empleado.apellido, cargos.nombre, 
salario, contrato.fecha_contratacion, contrato.fecha_terminacion 
(σ cargos.idCargo=contrato.idcargo ∧ empleado.idContrato = contrato.idContrato (empleado ⨯ cargos ⨯ contrato))

-- b)  Empleados y la respectiva sucursal a la que estan vinculados (puede ser más de una)

π empleado.nombre, empleado.apellido, sucursal.nombre → sucursal
(σ empleado.idEmpleado=vinculos.idempleado 
∧ sucursal.idsucursal=vinculos.idsucursal(empleado ⨯ sucursal ⨯ vinculos))

-- c) Compras de cada cliente y su respectiva fecha
π cliente.nombre, cliente.apellido, producto.nombre,
venta.fecha   venta_productos 
(σ venta_productos.idventa=venta.idventa ∧ venta.idcliente=cliente.idcliente
∧ producto.idProducto=venta_productos.idProducto (cliente ⨯ producto ⨯ venta))

-- d)Ventas de cada empleado en su respectiva sucursal y fecha

π empleado.nombre, empleado.apellido, sucursal.nombre → sucursal,
venta.fecha (σ venta_productos.idventa=venta.idventa ∧ venta.idempleado=empleado.idempleado ∧ 
producto.idProducto=venta_productos.idProducto ∧ sucursal.idsucursal = venta.idsucursal
(empleado ⨯ producto ⨯ venta ⨯ venta_productos ⨯ sucursal))

-- e) Administradores de las sucursales de la microempresa

π empleado.nombre, empleado.apellido, sucursal.nombre → sucursal
(σ cargos.nombre = "Administrador"
∧ empleado.idempleado = sucursal.administrador ∧ contrato.idcargo = cargos.idcargo
∧ empleado.idcontrato = contrato.idcontrato
(empleado ⨯ sucursal ⨯ contrato ⨯ cargos))

-- f) Domiciliarios y sus respectivos teléfonos

π empleado.nombre, empleado.apellido, empleado.telefono 
 (σ cargos.nombre = "Domiciliario"
∧ cargos.idCargo = contrato.idcargo ∧ empleado.idcontrato = contrato.idcontrato
( empleado ⨯ contrato ⨯ cargos))

-- g) Maquinaría, su marca y su respectiva sucursal

π maquinaria_y_equipo.nombre , maquinaria_y_equipo.marca , sucursal.nombre → sucursal
(σ maquinaria_y_equipo.idinventario=inventario.idinventario
∧ inventario.idsucursal = sucursal.idsucursal(maquinaria_y_equipo ⨯ sucursal ⨯ inventario))

-- h) Insumos adquiridos con su respectivo proveedor y fecha de compra

π insumo.nombre, proveedor.nombre → provedor, insumo.fecha_de_compra 
(σ insumo.idinsumo=adquisicion_insumos.idinsumo ∧ proveedor.NIT = adquisicion_insumos.NIT(insumo ⨯ proveedor ⨯ adquisicion_insumos))

-- i)Clientes con sus perfiles y sus respectivas direcciones

π cliente.nombre, cliente.apellido, cliente.perfil, domicilio.direccion_entrega 
(σ cliente.idcliente = domicilio.idcliente (cliente ⨯ domicilio))

-- j) Funcionarios de la empresa con su dirección y EPS

π empleado.nombre, empleado.apellido, empleado.direccion, empleado.EPS
(σ cargos.nombre = "Funcionario" ∧ cargos.idCargo = contrato.idcargo ∧ empleado.idcontrato = contrato.idcontrato (empleado ⨯ contrato ⨯ cargos))

-- 2)  Agregaciones y Agrupaciones

-- a) Número de empleados por cada sucursal

γ sucursal.nombre → sucursal; COUNT(vinculos.idempleado)
(σ vinculos.idsucursal = sucursal.idsucursal(sucursal ⨯ vinculos))

-- b) Promedio salarial de los empleados por sucursal

γ sucursal.nombre → sucursal; avg(contrato.salario)
(σ sucursal.idsucursal = vinculos.idsucursal ∧ contrato.idcontrato = 
empleado.idempleado ∧ vinculos.idempleado = empleado.idempleado
(sucursal ⨯ vinculos ⨯ contrato ⨯ empleado))

-- c) Cantidad de maquinaría presente en cada sucursal

γ sucursal.nombre → sucursal; COUNT(maquinaria_y_equipo.idmaquinaria_y_equipo) 
(σ maquinaria_y_equipo.idinventario = inventario.idinventario 
and inventario.idsucursal = sucursal.idsucursal 
(sucursal ⨯ inventario ⨯ maquinaria_y_equipo)) 


-- d) Deuda de la microempresa referente a insumos 

γ sum(precio_por_unidad_de_medida*unidad_de_medida*cantidad) → deuda_insumos;
(σ Estado_de_pago = "Pendiente"(insumo))

-- e) Deuda de la microempresa referente a maquinaría

γ sum(Cantidad_a_pagar) → deuda_maquinaria;
(σ Estado_de_pago = "Pendiente"(maquinaria_y_equipo));

-- f) Cantidad de sucursales vinculadas a cada empleado 

γ empleado.nombre, empleado.apellido; sum(vinculos.idsucursal) 
(σ empleado.idempleado = vinculos.idempleado 
(empleado ⨯ vinculos));

-- g) Cantidad de ventas por cada sucursal

γ sucursal.nombre → sucursal; sum(venta.idventa) 
(σ sucursal.idsucursal = venta.idsucursal(venta ⨯ sucursal))

-- h) Cantidad de productos disponibles por categoria

γ categoria; sum(idproducto) σ(producto)

-- i) Salario promedio de todos los empleados

γ avg(salario); σ (contrato)

-- j) Promedio salarial de cada uno de los cargos

γ cargos.nombre → cargo; avg(contrato.salario) 
(σ cargos.idcargo = contrato.idcargo (cargos ⨯ contrato))

-- 4) IN

-- a) Maquinaria presente en Sopó y bogotá

select maquinaria_y_equipo.nombre, maquinaria_y_equipo.marca from maquinaria_y_equipo, inventario,
sucursal where maquinaria_y_equipo.idinventario=inventario.idinventario and inventario.idsucursal=sucursal.idsucursal
and ciudad in ('Sopó','Bogotá');

-- b) Empleados cuyas EPS son Sanitas, Compensar o Medimas

select nombre, apellido from empleado where EPS in ('Sanitas','Compenar','Medimas');

-- c) Proveedores ubicados en Bogotá, Zipaquirá y Fusagasugá
select nombre as proveedores from proveedor where ubicacion in ('Bogotá','Fusagasugá','Zipaquirá');

-- d) Ventas realizadas entre el 10 de junio al 20 de junio de 2021

select count(idVenta) from venta 
where fecha 
in (
'10-06-2021',
'11-06-2021',
'12-06-2021',
'13-06-2021',
'14-06-2021',
'15-06-2021',
'16-06-2021',
'17-06-2021',
'18-06-2021',
'19-06-2021',
'20-06-2021'
)

-- 5) HAVING

-- a) Promedio salarial de cada sucursal cuando son menores a 10000

select sucursal.nombre as sucursal, avg(contrato.salario) as promedio from sucursal, vinculos, contrato, empleado
where sucursal.idsucursal = vinculos.idsucursal and contrato.idcontrato = empleado.idempleado
and vinculos.idempleado = empleado.idempleado group by sucursal.nombre having promedio < 10000;

-- b) Suma de salarios de las sucursales que son mayores a 30000000

select sucursal.nombre as sucursal, sum(contrato.salario) as total_salarios from sucursal, vinculos, contrato, empleado
where sucursal.idsucursal = vinculos.idsucursal and contrato.idcontrato = empleado.idempleado
and vinculos.idempleado = empleado.idempleado group by sucursal.nombre having total_salarios > 30000000;

-- c) Cantidad de maquinaria sin pagar por sucursal cuando es mayor a 5

select sucursal.nombre as sucursal, sum(maquinaria_y_equipo.idmaquinaria_y_equipo) as cantidad from maquinaria_y_equipo, sucursal,
inventario where maquinaria_y_equipo.idinventario = inventario.idinventario and sucursal.idsucursal = inventario.idsucursal
group by sucursal.nombre having cantidad > 5;
